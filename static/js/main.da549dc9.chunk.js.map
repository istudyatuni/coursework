{"version":3,"sources":["components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["useKeypress","key","action","useEffect","onKeydown","e","preventDefault","window","addEventListener","removeEventListener","App","useState","posX","setPosX","posY","setPosY","rotX","setRotX","rotY","setRotY","resetAll","className","setup","p5","canvasParentRef","w","windowWidth","h","windowHeight","createCanvas","WEBGL","parent","draw","background","translate","rotateX","rotateY","sphere","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAQA,SAASA,EAAYC,EAAaC,GACjCC,qBAAU,WACT,SAASC,EAAUC,GACfA,EAAEJ,MAAQA,IACZI,EAAEC,iBACFJ,KAIF,OADAK,OAAOC,iBAAiB,UAAWJ,GAC5B,kBAAMG,OAAOE,oBAAoB,UAAWL,MACjD,IAuFWM,MApFf,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACPC,EADO,KACDC,EADC,OAEUF,mBAAS,IAFnB,mBAEPG,EAFO,KAEDC,EAFC,OAIUJ,mBAAS,GAJnB,mBAIPK,EAJO,KAIDC,EAJC,OAKUN,mBAAS,GALnB,mBAKPO,EALO,KAKDC,EALC,KAOd,SAASC,IACRP,EAAQ,GACRE,EAAQ,GACRE,EAAQ,GACRE,EAAQ,GAXK,MAeaR,mBAAS,CAAC,uCAfvB,mBA6Dd,OA7Dc,UA6BdX,EAAY,WAAW,kBAAMiB,GAAQ,SAAAD,GAAI,OAAIA,EAAO,UACpDhB,EAAY,aAAa,kBAAMmB,GAAQ,SAAAD,GAAI,OAAIA,EAAO,UACtDlB,EAAY,aAAa,kBAAMiB,GAAQ,SAAAD,GAAI,OAAIA,EAAO,UACtDhB,EAAY,cAAc,kBAAMmB,GAAQ,SAAAD,GAAI,OAAIA,EAAO,UAGvDlB,EAAY,KAAK,kBAAMe,GAAQ,SAAAD,GAAI,OAAIA,EAAO,SAC9Cd,EAAY,KAAK,kBAAMa,GAAQ,SAAAD,GAAI,OAAIA,EAAO,SAC9CZ,EAAY,KAAK,kBAAMe,GAAQ,SAAAD,GAAI,OAAIA,EAAO,SAC9Cd,EAAY,KAAK,kBAAMa,GAAQ,SAAAD,GAAI,OAAIA,EAAO,SAE9CZ,EAAY,IAAKoB,GAsBhB,sBAAKC,UAAU,MAAf,UACC,cAAC,IAAD,CAAQC,MArBI,SAACC,EAAaC,GAC3B,IAAIC,EAAIF,EAAGG,YACPC,EAAIJ,EAAGK,aACXL,EAAGM,aAAaJ,EAAGE,EAAGJ,EAAGO,OAAOC,OAAOP,IAkBhBQ,KAfX,SAACT,GACbA,EAAGU,WAAW,IAAK,IAAK,IAGxBV,EAAGW,UAAUtB,EAAME,GAGnBS,EAAGY,QAAQnB,GACXO,EAAGa,QAAQlB,GAEXK,EAAGc,OAAO,QAMT,sBAAKhB,UAAU,QAAf,UACC,8BAAG,0CAAH,IAAoB,gDACpB,8BAAG,sBAAMiB,QAAS,kBAAIzB,EAAQ,IAA3B,mBAA2C,oCAA9C,IAA0DD,KAC1D,8BAAG,sBAAM0B,QAAS,kBAAIvB,EAAQ,IAA3B,mBAA2C,oCAA9C,IAA0DD,KAC1D,8BAAG,0CAAH,IAAoB,oEACpB,8BAAG,sBAAMwB,QAAS,kBAAIrB,EAAQ,IAA3B,mBAA2C,oCAA9C,IAA0DD,KAC1D,8BAAG,sBAAMsB,QAAS,kBAAInB,EAAQ,IAA3B,mBAA2C,oCAA9C,IAA0DD,KAC1D,uBACA,8BAAG,sBAAMoB,QAASlB,EAAf,uBAAH,IAA6C,+CAMlC,4BCrFAmB,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHXQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.da549dc9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\"; //Import this for typechecking and intellisense\n\n// import useKeypress from '../../hooks/useKeypress'\n\nfunction useKeypress(key: string, action: ()=>void) {\n\tuseEffect(()=>{\n\t\tfunction onKeydown(e: any) {\n\t\t\tif(e.key === key) {\n\t\t\t\te.preventDefault()\n\t\t\t\taction()\n\t\t\t}\n\t\t}\n\t\twindow.addEventListener('keydown', onKeydown)\n\t\treturn () => window.removeEventListener('keydown', onKeydown)\n\t}, []);\n}\n\nfunction App() {\n\tconst [posX, setPosX] = useState(10)\n\tconst [posY, setPosY] = useState(10)\n\n\tconst [rotX, setRotX] = useState(0)\n\tconst [rotY, setRotY] = useState(0)\n\n\tfunction resetAll() {\n\t\tsetPosX(0)\n\t\tsetPosY(0)\n\t\tsetRotX(0)\n\t\tsetRotY(0)\n\t}\n\n\t// for non-console log\n\tconst [logMsg, writeLog] = useState([<li>Log</li>])\n\tfunction log(msg: string, delay: number = 1000) {\n\t\tlet tmp = [...logMsg]\n\t\tif(tmp.length >= 7) {\n\t\t\ttmp = tmp.slice(1)\n\t\t}\n\t\twriteLog([...tmp, <li>{msg}</li>])\n\t}\n\n\tfunction resetLog() {\n\t\twriteLog([<li>Log</li>])\n\t}\n\n\t// rotate\n\tuseKeypress('ArrowUp', () => setRotX(rotX => rotX + 0.05));\n\tuseKeypress('ArrowLeft', () => setRotY(rotY => rotY - 0.05));\n\tuseKeypress('ArrowDown', () => setRotX(rotX => rotX - 0.05));\n\tuseKeypress('ArrowRight', () => setRotY(rotY => rotY + 0.05));\n\n\t// move\n\tuseKeypress('w', () => setPosY(posY => posY - 10));\n\tuseKeypress('a', () => setPosX(posX => posX - 10));\n\tuseKeypress('s', () => setPosY(posY => posY + 10));\n\tuseKeypress('d', () => setPosX(posX => posX + 10));\n\n\tuseKeypress(' ', resetAll)\n\n\tconst setup = (p5: p5Types, canvasParentRef: Element) => {\n\t\tlet w = p5.windowWidth\n\t\tlet h = p5.windowHeight\n\t\tp5.createCanvas(w, h, p5.WEBGL).parent(canvasParentRef);\n\t};\n\n\tconst draw = (p5: p5Types) => {\n\t\tp5.background(205, 105, 94);\n\n\t\t// position\n\t\tp5.translate(posX, posY)\n\n\t\t// rotation\n\t\tp5.rotateX(rotX)\n\t\tp5.rotateY(rotY)\n\n\t\tp5.sphere(300);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Sketch setup={setup} draw={draw} />\n\t\t\t<div className=\"Ruler\">\n\t\t\t\t<p><i>Position:</i> <code>(w a s d)</code></p>\n\t\t\t\t<p><span onClick={()=>setPosX(0)}>reset</span><b>X: </b> {posX}</p>\n\t\t\t\t<p><span onClick={()=>setPosY(0)}>reset</span><b>Y: </b> {posY}</p>\n\t\t\t\t<p><i>Rotation:</i> <code>(↑ ↓ ← →)</code></p>\n\t\t\t\t<p><span onClick={()=>setRotX(0)}>reset</span><b>X: </b> {rotX}</p>\n\t\t\t\t<p><span onClick={()=>setRotY(0)}>reset</span><b>Y: </b> {rotY}</p>\n\t\t\t\t<br/>\n\t\t\t\t<p><span onClick={resetAll}>Reset all</span> <code>Space</code></p>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\t(!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ?\n\t\t\t\t(<div className=\"logBox\" onClick={resetLog}>\n\t\t\t\t\t<dl>{logMsg}</dl>\n\t\t\t\t</div>) : (<div></div>)\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}